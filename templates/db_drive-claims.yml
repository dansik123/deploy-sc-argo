################## Replica volumes
apiVersion: v1
kind: PersistentVolume
metadata:
  namespace: "{{ .Values.appName }}-ns"
  name: "{{ .Values.appName }}-pv-replica1"
  labels:
    app: "{{ .Values.appName }}-db-app"
    role: replica
spec:
  capacity:
    storage: {{ .Values.database.storage.replica1.capacity }}
  accessModes:
    - ReadWriteOnce
  storageClassName: storage-replica-class
  hostPath:
    path: {{ .Values.database.storage.replica1.from }}
  persistentVolumeReclaimPolicy: Retain
---
apiVersion: v1
kind: PersistentVolume
metadata:
  namespace: "{{ .Values.appName }}-ns"
  name: "{{ .Values.appName }}-pv-replica2"
  labels:
    app: "{{ .Values.appName }}-db-app"
    role: replica
spec:
  capacity:
    storage: {{ .Values.database.storage.replica2.capacity }}
  accessModes:
    - ReadWriteOnce
  storageClassName: storage-replica-class
  hostPath:
    path: {{ .Values.database.storage.replica2.from }}
  persistentVolumeReclaimPolicy: Retain
---
####################### Master volume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: "{{ .Values.appName }}-pv-master"
  labels:
    app: "{{ .Values.appName }}-db-app"
    role: master
  namespace: "{{ .Values.appName }}-ns"
spec:
  storageClassName: storage-master-class
  capacity:
    storage: {{ .Values.database.storage.master.capacity }}
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: {{ .Values.database.storage.master.from }}
  persistentVolumeReclaimPolicy: Retain
---
