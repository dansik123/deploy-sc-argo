apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.appName }}-backend-deployment"
  labels:
    app: "{{ .Values.appName }}-backend-deployment"
  namespace: "{{ .Values.appName }}-ns"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ .Values.appName }}-backend-deployment"
  template:
    metadata:
      labels:
        app: "{{ .Values.appName }}-backend-deployment"
    spec:
      volumes:
      - name: "{{ .Values.appName }}-media-volume"
        persistentVolumeClaim:
          claimName: "{{ .Values.appName }}-pvc"
      containers:
      - name: "{{ .Values.appName }}-backend-conainer"
        image: "{{ .Values.backend.image }}:{{ .Values.backend.tag }}"
        imagePullPolicy: {{ .Values.images.pullPolicy }}
        env:
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.appName }}-db-secret"
              key: POSTGRES_USER
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.appName }}-db-secret"
              key: POSTGRES_PASSWORD
        envFrom:
          - configMapRef:
              name: "{{ .Values.appName }}-backend-configmap"
          - secretRef:
              name: "{{ .Values.appName }}-backend-secret"
        ports:
          - containerPort: 8080
        volumeMounts:
          - mountPath: {{ .Values.backend.storage.to }}
            name: "{{ .Values.appName }}-media-volume"
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ .Values.appName }}-backend-service"
  namespace: "{{ .Values.appName }}-ns"
spec:
  selector:
    app: "{{ .Values.appName }}-backend-deployment"
  type: NodePort
  ports:
    - name: http
      protocol: TCP
      port: 8888
      targetPort: 8080
